[{"C:\\project\\masakin-FE\\src\\index.js":"1","C:\\project\\masakin-FE\\src\\pages\\Router.jsx":"2","C:\\project\\masakin-FE\\src\\components\\addRecipe\\addRecipe.jsx":"3","C:\\project\\masakin-FE\\src\\pages\\addRecipe\\addRecipe.jsx":"4","C:\\project\\masakin-FE\\src\\components\\navbar\\navbar.jsx":"5","C:\\project\\masakin-FE\\src\\pages\\Home.jsx":"6"},{"size":272,"mtime":1608505534932,"results":"7","hashOfConfig":"8"},{"size":366,"mtime":1608505536793,"results":"9","hashOfConfig":"8"},{"size":2882,"mtime":1608503227925,"results":"10","hashOfConfig":"8"},{"size":606,"mtime":1608498249771,"results":"11","hashOfConfig":"8"},{"size":2845,"mtime":1608616204021,"results":"12","hashOfConfig":"8"},{"size":149,"mtime":1608504681454,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"19is72p",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\project\\masakin-FE\\src\\index.js",[],["28","29"],"C:\\project\\masakin-FE\\src\\pages\\Router.jsx",[],"C:\\project\\masakin-FE\\src\\components\\addRecipe\\addRecipe.jsx",["30","31","32"],"import React, { Component } from 'react';\r\nimport { Jumbotron, Button, Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport css from \"./addRecipe.module.css\";\r\n\r\nclass addRecipe extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            file: null\r\n        }\r\n        this.handleFile = this.handleFile.bind(this)\r\n    }\r\n    handleFile(event) {\r\n        this.setState({\r\n            file: URL.createObjectURL(event.target.files[0])\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"card border-white mb4\" style={{ width: \"99%\", height: \"auto\", marginTop: \"50px\", marginLeft: \"70px\" }}>\r\n                    <div className=\"card-body\">\r\n                        <Form encType=\"multipart/form-data\" onSubmit={this.submitHandler}>\r\n                            <Jumbotron className=\"container-gap\">\r\n                                <h4>Add Photo</h4>\r\n                                <hr></hr>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-md-8 row\">\r\n                                        <input type=\"file\" name='product_img' onChange={this.handleFile} autoComplete='off' placeholder=\"\" multiple />\r\n                                        <img src={this.state.file} />\r\n                                    </div>\r\n                                </div>\r\n                            </Jumbotron>\r\n                            <Form.Group controlId=\"formBasicText\" style={{margin: '2rem auto 2rem auto'}}>\r\n                                <Form.Control type=\"text\" name='title' autoComplete='off' placeholder=\"Title\" style={{ background: '#F6F5F4' }} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicText\" style={{margin: '2rem auto 2rem auto'}}>\r\n                                <Form.Control as=\"textarea\" rows={10} name='ingredients' autoComplete='off' placeholder=\"Ingredients\" style={{ background: '#F6F5F4' }} />\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"formBasicText\" style={{margin: '2rem auto 2rem auto'}}>\r\n                                <Form.Control type=\"text\" name='video' autoComplete='off' placeholder=\"Video\" style={{ background: '#F6F5F4' }} />\r\n                            </Form.Group>\r\n                            <div className='d-flex justify-content-center'>\r\n                            <Button variant=\"warning\" type=\"submit\" style={{width: '300px'}}>\r\n                                Submit\r\n                            </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div >\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default addRecipe;","C:\\project\\masakin-FE\\src\\pages\\addRecipe\\addRecipe.jsx",[],"C:\\project\\masakin-FE\\src\\components\\navbar\\navbar.jsx",["33","34"],"C:\\project\\masakin-FE\\src\\pages\\Home.jsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":3,"column":10,"nodeType":"41","messageId":"42","endLine":3,"endColumn":14},{"ruleId":"39","severity":1,"message":"43","line":4,"column":8,"nodeType":"41","messageId":"42","endLine":4,"endColumn":11},{"ruleId":"44","severity":1,"message":"45","line":33,"column":41,"nodeType":"46","endLine":33,"endColumn":70},{"ruleId":"39","severity":1,"message":"47","line":2,"column":10,"nodeType":"41","messageId":"42","endLine":2,"endColumn":20},{"ruleId":"48","severity":1,"message":"49","line":40,"column":37,"nodeType":"46","endLine":45,"endColumn":38},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'css' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'withRouter' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]